require:
  - rubocop-rspec

# Prefer &&/|| over and/or.
Style/AndOr:
  Enabled: true

# Align `when` with `case`.
Layout/CaseIndentation:
  Enabled: true

# Do not use braces for hash literals when they are the last argument of a
# method call.
Style/BracesAroundHashParameters:
  Enabled: true

Style/FileName:
  Enabled: false

# Offense count: 1
Metrics/AbcSize:
  Enabled: false
  Max: 18

# Offense count: 1
# Configuration parameters: CountComments.
Metrics/BlockLength:
  Max: 60

# Offense count: 114
# Configuration parameters: AllowHeredoc, AllowURI, URISchemes, IgnoreCopDirectives, IgnoredPatterns.
# URISchemes: http, https
Metrics/LineLength:
  Max: 154

# Offense count: 1
# Configuration parameters: CountComments.
Metrics/MethodLength:
  Max: 50

# Offense count: 2
# Cop supports --auto-correct.
# Configuration parameters: EnforcedHashRocketStyle, EnforcedColonStyle, EnforcedLastArgumentHashStyle, SupportedLastArgumentHashStyles.
# SupportedLastArgumentHashStyles: always_inspect, always_ignore, ignore_implicit, ignore_explicit
Layout/AlignHash:
  Exclude:
    - config/routes.rb

# Offense count: 1
# Cop supports --auto-correct.
Style/BlockComments:
  Exclude:
    - spec/spec_helper.rb

# Offense count: 1
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: nested, compact
Style/ClassAndModuleChildren:
  Exclude:
    - test/test_helper.rb

# Offense count: 8
# Cop supports --auto-correct.
Layout/CommentIndentation:
  Enabled: true
  Exclude:
    - spec/controllers/posts_controller_spec.rb
    - spec/models/user_spec.rb
    - spec/teaspoon_env.rb

# Offense count: 12
Style/Documentation:
  Exclude:
    - spec/**/*
    - test/**/*
    - app/channels/application_cable/connection.rb
    - app/channels/chats_channel.rb
    - app/helpers/help_helper.rb
    - app/helpers/home_helper.rb
    - app/helpers/posts_helper.rb
    - app/helpers/users_helper.rb
    - config/application.rb
    - db/migrate/20161109201707_devise_create_users.rb
    - db/migrate/20161112230022_create_chats.rb
    - db/migrate/20161112230714_create_messages.rb
    - db/migrate/20161119194845_create_posts.rb
    - db/migrate/20161119194846_create_comments.rb

Documentation:
  Enabled: false

# No extra empty lines.
Layout/EmptyLines:
  Enabled: true

# Offense count: 3
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: empty_lines, no_empty_lines
Layout/EmptyLinesAroundBlockBody:
  Exclude:
    - db/schema.rb

# In a regular class definition, no empty lines around the body.
Layout/EmptyLinesAroundClassBody:
  Enabled: true

# In a regular module definition, no empty lines around the body.
Layout/EmptyLinesAroundModuleBody:
  Enabled: true



# Offense count: 2
# Cop supports --auto-correct.
# Configuration parameters: AllowForAlignment, ForceEqualSignAlignment.
Layout/ExtraSpacing:
  Exclude:
    - db/schema.rb

# Offense count: 92
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: when_needed, always
Style/FrozenStringLiteralComment:
  Enabled: false

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Enabled: true

# Method definitions after `private` or `protected` isolated calls need one
# extra level of indentation.
Layout/IndentationConsistency:
  Enabled: true

# Two spaces, no tabs (for indentation).
Layout/IndentationWidth:
  Enabled: true

# Offense count: 23
# Cop supports --auto-correct.
Layout/LeadingCommentSpace:
  Exclude:
    - spec/teaspoon_env.rb

# Offense count: 1
# Cop supports --auto-correct.
Style/NumericLiterals:
  MinDigits: 15

# Offense count: 2
# Cop supports --auto-correct.
Layout/SpaceInsideBrackets:
  Exclude:
    - config/environments/production.rb

AllCops:
  TargetRubyVersion: 2.3
  Exclude:
    - 'vendor/**/*'
    - 'node_modules/**/*'
    - 'db/**/*'
    - 'tmp/**/*'
    - 'bin/**/*'
    - 'generator_templates/**/*'
    - 'builds/**/*'

Layout/SpaceAfterColon:
  Enabled: true

Layout/SpaceAfterComma:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Layout/SpaceAroundKeyword:
  Enabled: true

Layout/SpaceAroundOperators:
  Enabled: true

Layout/SpaceBeforeFirstArg:
    Enabled: true

# Defining a method with parameters needs parentheses.
Style/MethodDefParentheses:
  Enabled: true

# Use `foo {}` not `foo{}`.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

# Use `foo { bar }` not `foo {bar}`.
Layout/SpaceInsideBlockBraces:
  Enabled: true

# Use `{ a: 1 }` not `{a:1}`.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceInsideParens:
  Enabled: true

# Check quotes usage according to lint rule below.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

# Detect hard tabs, no hard tabs.
Layout/Tab:
  Enabled: true

# Blank lines should not have any spaces.
Layout/TrailingBlankLines:
  Enabled: true

# No trailing whitespace.
Layout/TrailingWhitespace:
  Enabled: true

# Use quotes for string literals when they are enough.
Style/UnneededPercentQ:
  Enabled: true

# Align `end` with the matching keyword or starting expression except for
# assignments, where it should be aligned with the LHS.
Lint/EndAlignment:
  Enabled: true
  EnforcedStyleAlignWith: variable

# Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
Lint/RequireParentheses:
  Enabled: true

# RSpec #######################################################################
# Check that instances are not being stubbed globally.
RSpec/AnyInstance:
  Enabled: false

# Check for expectations where `be(...)` can replace `eql(...)`.
RSpec/BeEql:
  Enabled: true

# Check that the first argument to the top level describe is the tested class or
# module.
RSpec/DescribeClass:
  Enabled: false

# Use `described_class` for tested class / module.
RSpec/DescribeMethod:
  Enabled: false

# Avoid describing symbols.
RSpec/DescribeSymbol:
  Enabled: true

# Checks that the second argument to top level describe is the tested method
# name.
RSpec/DescribedClass:
  Enabled: true

# Checks if an example group does not include any tests.
RSpec/EmptyExampleGroup:
  Enabled: true
  CustomIncludeMethods:
    - run_permission_checks

# Checks for long example.
RSpec/ExampleLength:
  Enabled: false
  Max: 5

# Do not use should when describing your tests.
RSpec/ExampleWording:
  Enabled: false
  CustomTransform:
    be: is
    have: has
    not: does not
  IgnoredWords: []

# Checks for `expect(...)` calls containing literal values.
RSpec/ExpectActual:
  Enabled: true

# Checks for opportunities to use `expect { â€¦ }.to output`.
RSpec/ExpectOutput:
  Enabled: true

# Checks the file and folder naming of the spec file.
RSpec/FilePath:
  Enabled: true
  IgnoreMethods: true
  Exclude:
    - 'qa/**/*'
    - 'spec/javascripts/fixtures/*'
    - 'spec/requests/api/v3/*'

# Checks if there are focused specs.
RSpec/Focus:
  Enabled: true

# Checks for the usage of instance variables.
RSpec/InstanceVariable:
  Enabled: false

# Checks for `subject` definitions that come after `let` definitions.
RSpec/LeadingSubject:
  Enabled: false

# Checks unreferenced `let!` calls being used for test setup.
RSpec/LetSetup:
  Enabled: false

# Check that chains of messages are not being stubbed.
RSpec/MessageChain:
  Enabled: false

# Checks that message expectations are set using spies.
RSpec/MessageSpies:
  Enabled: false

# Checks for multiple top-level describes.
RSpec/MultipleDescribes:
  Enabled: false

# Checks if examples contain too many `expect` calls.
RSpec/MultipleExpectations:
  Enabled: false

# Checks for explicitly referenced test subjects.
RSpec/NamedSubject:
  Enabled: false

# Checks for nested example groups.
RSpec/NestedGroups:
  Enabled: false

# Enforces the usage of the same method on all negative message expectations.
RSpec/NotToNot:
  EnforcedStyle: not_to
  Enabled: true

# Check for repeated description strings in example groups.
RSpec/RepeatedDescription:
  Enabled: false

# Checks for stubbed test subjects.
RSpec/SubjectStub:
  Enabled: false

# Prefer using verifying doubles over normal doubles.
RSpec/VerifiedDoubles:
  Enabled: false

Metrics/BlockLength:
  Max: 200
